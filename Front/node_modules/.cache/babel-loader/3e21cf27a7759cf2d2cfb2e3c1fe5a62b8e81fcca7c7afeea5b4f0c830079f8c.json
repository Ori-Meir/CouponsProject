{"ast":null,"code":"export class authState {\n  constructor() {\n    this.id = 0;\n    this.email = \"\";\n    this.name = \"guest\";\n    this.token = \"\";\n    this.userType = \"\";\n    this.isLogged = false;\n  }\n}\nexport let AuthActionType = /*#__PURE__*/function (AuthActionType) {\n  AuthActionType[\"login\"] = \"login\";\n  AuthActionType[\"logout\"] = \"logout\";\n  AuthActionType[\"updateToken\"] = \"updateToken\";\n  return AuthActionType;\n}({});\nexport function loginAction(user) {\n  return {\n    type: AuthActionType.login,\n    payload: user\n  };\n}\nexport function logoutAction() {\n  return {\n    type: AuthActionType.logout\n  };\n}\nexport function updateTokenAction(token) {\n  return {\n    type: AuthActionType.updateToken,\n    payload: token\n  };\n}\nexport function AuthReducer(currentState = new authState(), action) {\n  let newState = {\n    ...currentState\n  };\n  switch (action.type) {\n    case AuthActionType.login:\n      newState = action.payload;\n      break;\n    case AuthActionType.logout:\n      newState = new authState();\n      break;\n    case AuthActionType.updateToken:\n      newState.token = action.payload;\n      break;\n  }\n  return newState;\n}\n_c = AuthReducer;\nvar _c;\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"names":["authState","constructor","id","email","name","token","userType","isLogged","AuthActionType","loginAction","user","type","login","payload","logoutAction","logout","updateTokenAction","updateToken","AuthReducer","currentState","action","newState","_c","$RefreshReg$"],"sources":["C:/Users/orime/IdeaProjects/Project_Ori_Meir/Frontend/src/redux/authReducer.ts"],"sourcesContent":["export class authState {\n    id:number=0;\n    email: string = \"\";\n    name: string = \"guest\";\n    token: string = \"\";\n    userType: string = \"\";\n    isLogged:boolean = false;\n\n}\n\nexport enum AuthActionType {\n    login = \"login\",\n    logout = \"logout\",\n    updateToken = \"updateToken\",\n}\n\nexport interface AuthAction {\n    type: AuthActionType,\n    payload?: any\n}\n\nexport function loginAction(user: authState): AuthAction {\n    return { type: AuthActionType.login, payload: user }\n}\n\nexport function logoutAction(): AuthAction {\n    return { type: AuthActionType.logout }\n}\n\nexport function updateTokenAction(token: string): AuthAction {\n    return { type: AuthActionType.updateToken, payload: token }\n}\n\nexport function AuthReducer(currentState: authState = new authState(), action: AuthAction): authState {\n    let newState = { ...currentState };\n\n    switch (action.type) {\n        case AuthActionType.login:\n            newState = action.payload;\n            break;\n        case AuthActionType.logout:\n            newState = new authState();\n            break;\n        case AuthActionType.updateToken:\n            newState.token = action.payload;\n            break;\n    }\n\n    return newState;\n}"],"mappings":"AAAA,OAAO,MAAMA,SAAS,CAAC;EAAAC,YAAA;IAAA,KACnBC,EAAE,GAAQ,CAAC;IAAA,KACXC,KAAK,GAAW,EAAE;IAAA,KAClBC,IAAI,GAAW,OAAO;IAAA,KACtBC,KAAK,GAAW,EAAE;IAAA,KAClBC,QAAQ,GAAW,EAAE;IAAA,KACrBC,QAAQ,GAAW,KAAK;EAAA;AAE5B;AAEA,WAAYC,cAAc,0BAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;AAW1B,OAAO,SAASC,WAAWA,CAACC,IAAe,EAAc;EACrD,OAAO;IAAEC,IAAI,EAAEH,cAAc,CAACI,KAAK;IAAEC,OAAO,EAAEH;EAAK,CAAC;AACxD;AAEA,OAAO,SAASI,YAAYA,CAAA,EAAe;EACvC,OAAO;IAAEH,IAAI,EAAEH,cAAc,CAACO;EAAO,CAAC;AAC1C;AAEA,OAAO,SAASC,iBAAiBA,CAACX,KAAa,EAAc;EACzD,OAAO;IAAEM,IAAI,EAAEH,cAAc,CAACS,WAAW;IAAEJ,OAAO,EAAER;EAAM,CAAC;AAC/D;AAEA,OAAO,SAASa,WAAWA,CAACC,YAAuB,GAAG,IAAInB,SAAS,CAAC,CAAC,EAAEoB,MAAkB,EAAa;EAClG,IAAIC,QAAQ,GAAG;IAAE,GAAGF;EAAa,CAAC;EAElC,QAAQC,MAAM,CAACT,IAAI;IACf,KAAKH,cAAc,CAACI,KAAK;MACrBS,QAAQ,GAAGD,MAAM,CAACP,OAAO;MACzB;IACJ,KAAKL,cAAc,CAACO,MAAM;MACtBM,QAAQ,GAAG,IAAIrB,SAAS,CAAC,CAAC;MAC1B;IACJ,KAAKQ,cAAc,CAACS,WAAW;MAC3BI,QAAQ,CAAChB,KAAK,GAAGe,MAAM,CAACP,OAAO;MAC/B;EACR;EAEA,OAAOQ,QAAQ;AACnB;AAACC,EAAA,GAhBeJ,WAAW;AAAA,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}