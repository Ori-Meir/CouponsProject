{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orime\\\\IdeaProjects\\\\Project_Ori_Meir\\\\Frontend\\\\src\\\\Components\\\\Pages\\\\AdminPages\\\\UpdateCustomer\\\\UpdateCustomer.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport \"./UpdateCustomer.css\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { myStore } from \"../../../../redux/Store\";\nimport notify from \"../../../../util/notify\";\nimport axiosJWT from \"../../../../util/axiosJWT\";\nimport { updateCustomerAction } from \"../../../../redux/AdminReducer\";\nimport { Button, ButtonGroup, TextField, Typography } from \"@mui/material\";\nimport { checkData } from \"../../../../util/chekData\";\nimport { cloneDeep } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UpdateCustomer() {\n  _s();\n  var _errors$firstName, _errors$lastName, _errors$password;\n  const navigate = useNavigate();\n  const [customer, setCustomer] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  useEffect(() => {\n    checkData();\n    if (myStore.getState().auth.userType !== \"ADMIN\") {\n      navigate(\"/Page404\");\n      notify.error(\"No Acess!!!!!\");\n    }\n    if (id) {\n      const singleCustomer = cloneDeep(myStore.getState().admin.allCustomers.find(item => item.id === +id));\n      if (singleCustomer) {\n        setCustomer(singleCustomer);\n        reset(singleCustomer); // Reset form values with the company data\n      }\n    }\n    if (myStore.getState().auth.token.length < 10) {\n      navigate(\"/Login\");\n    }\n  }, [id, reset, navigate]);\n  const onSubmit = data => {\n    const token = myStore.getState().auth.token;\n    axiosJWT.put(\"http://localhost:8080/updateCustomer\", data, {\n      headers: {\n        'Authorization': `${token}`\n      }\n    }).then(res => {\n      myStore.dispatch(updateCustomerAction(res.data)); // Dispatch action with updated company\n      notify.success(\"Customer updated successfully!\");\n      navigate(\"/allCustomers\");\n    }).catch(err => {\n      console.error(\"Failed to update customer:\", err.response ? err.response.data : err);\n      notify.error(\"Failed to update the customer. \" + (err.response ? err.response.data.message : \"\"));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"updateCustomer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Box\",\n      style: {\n        width: \"70%\",\n        height: \"68vh\",\n        overflowY: \"scroll\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          className: \"HeadLine\",\n          children: \"Update Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 96\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"First Name\",\n          defaultValue: customer === null || customer === void 0 ? void 0 : customer.firstName,\n          ...register(\"firstName\", {\n            required: \"First Name is required!!\"\n          }),\n          error: !!errors.firstName,\n          helperText: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message,\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Last Name\",\n          defaultValue: customer === null || customer === void 0 ? void 0 : customer.lastName,\n          ...register(\"lastName\", {\n            required: \"Last Name is required!!\"\n          }),\n          error: !!errors.lastName,\n          helperText: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message,\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          defaultValue: customer === null || customer === void 0 ? void 0 : customer.email,\n          ...register(\"email\"),\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          type: \"password\",\n          defaultValue: customer === null || customer === void 0 ? void 0 : customer.password,\n          ...register(\"password\", {\n            required: \"Password is required\"\n          }),\n          error: !!errors.password,\n          helperText: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n          fullWidth: true,\n          margin: \"normal\",\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          variant: \"contained\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"error\",\n            onClick: () => navigate(\"/allCustomers\"),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateCustomer, \"YpCk+LyMpSNGzRC4In3oAIFQSkI=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = UpdateCustomer;\nvar _c;\n$RefreshReg$(_c, \"UpdateCustomer\");","map":{"version":3,"names":["useNavigate","useEffect","useState","useForm","myStore","notify","axiosJWT","updateCustomerAction","Button","ButtonGroup","TextField","Typography","checkData","cloneDeep","jsxDEV","_jsxDEV","UpdateCustomer","_s","_errors$firstName","_errors$lastName","_errors$password","navigate","customer","setCustomer","register","handleSubmit","formState","errors","reset","getState","auth","userType","error","id","singleCustomer","admin","allCustomers","find","item","token","length","onSubmit","data","put","headers","then","res","dispatch","success","catch","err","console","response","message","className","children","style","width","height","overflowY","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","defaultValue","firstName","required","helperText","fullWidth","margin","lastName","email","type","password","InputLabelProps","shrink","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/orime/IdeaProjects/Project_Ori_Meir/Frontend/src/Components/Pages/AdminPages/UpdateCustomer/UpdateCustomer.tsx"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\nimport \"./UpdateCustomer.css\";\nimport { Customer } from \"../../../Models/Customer\";\nimport { useEffect, useState } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { myStore } from \"../../../../redux/Store\";\nimport notify from \"../../../../util/notify\";\nimport axiosJWT from \"../../../../util/axiosJWT\";\nimport { getSingleCustomerAction, updateCustomerAction } from \"../../../../redux/AdminReducer\";\nimport { Button, ButtonGroup, TextField, Typography } from \"@mui/material\";\nimport { checkData } from \"../../../../util/chekData\";\nimport { cloneDeep } from \"lodash\";\n\nexport function UpdateCustomer(): JSX.Element {\n    const navigate = useNavigate();\n    const [customer, setCustomer] = useState<Customer | null>(null);\n    \n\n    const { register, handleSubmit, formState: { errors }, reset } = useForm<Customer>();\n\n    useEffect(() => {\n        checkData();\n        if(myStore.getState().auth.userType !== \"ADMIN\"){\n            navigate(\"/Page404\");\n            notify.error(\"No Acess!!!!!\");\n\n        }\n        if (id) {\n            const singleCustomer = cloneDeep(myStore.getState().admin.allCustomers.find(item => item.id === +id));\n            if (singleCustomer) {\n                setCustomer(singleCustomer);\n                reset(singleCustomer); // Reset form values with the company data\n            }\n        }\n        if (myStore.getState().auth.token.length < 10) {\n            navigate(\"/Login\");\n        }\n    }, [id, reset, navigate]);\n\n    const onSubmit: SubmitHandler<Customer> = (data) => {\n        const token = myStore.getState().auth.token;\n        axiosJWT.put(\"http://localhost:8080/updateCustomer\", data, {\n            headers: {\n                'Authorization': `${token}`\n            }\n        })\n        .then(res => {\n            myStore.dispatch(updateCustomerAction(res.data)); // Dispatch action with updated company\n            notify.success(\"Customer updated successfully!\");\n            navigate(\"/allCustomers\");\n        })\n        .catch(err => {\n            console.error(\"Failed to update customer:\", err.response ? err.response.data : err);\n            notify.error(\"Failed to update the customer. \" + (err.response ? err.response.data.message : \"\"));\n        });\n    };\n\n    return (\n        <div className=\"updateCustomer\">\n            <div className=\"Box\" style={{ width: \"70%\", height: \"68vh\", overflowY: \"scroll\" }}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <Typography variant=\"h4\" className=\"HeadLine\">Update Customer</Typography> <br/>\n                    <TextField\n                        label=\"First Name\"\n                        defaultValue={customer?.firstName}\n                        {...register(\"firstName\", { required: \"First Name is required!!\" })}\n                        error={!!errors.firstName}\n                        helperText={errors.firstName?.message}\n                        fullWidth\n                        margin=\"normal\"\n                    />\n                       <TextField\n                        label=\"Last Name\"\n                        defaultValue={customer?.lastName}\n                        {...register(\"lastName\", { required: \"Last Name is required!!\" })}\n                        error={!!errors.lastName}\n                        helperText={errors.lastName?.message}\n                        fullWidth\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        label=\"Email\"\n                        defaultValue={customer?.email}\n                        {...register(\"email\")}\n                        fullWidth\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        label=\"Password\"\n                        type=\"password\"\n                        defaultValue={customer?.password}\n                        {...register(\"password\", { required: \"Password is required\" })}\n                        error={!!errors.password}\n                        helperText={errors.password?.message}\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{ shrink: true }}\n                    />\n                    <hr />\n                    <ButtonGroup variant=\"contained\" fullWidth>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Update</Button>\n                        <Button variant=\"contained\" color=\"error\" onClick={() => navigate(\"/allCustomers\")}>Cancel</Button>\n                    </ButtonGroup>\n                </form>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}