{"ast":null,"code":"// import { Button, ButtonGroup, InputLabel, MenuItem, Select, TextField, Typography } from \"@mui/material\";\n// import { SubmitHandler, useForm } from \"react-hook-form\";\n// import { myStore } from \"../../../../redux/Store\";\n// import notify from \"../../../../util/notify\";\n// import { useNavigate } from \"react-router-dom\";\n// import { addCouponAction } from \"../../../../redux/CompanyReducer\";\n// import { Coupon } from \"../../../Models/Coupon\";\n// import { useEffect, useState } from \"react\";\n// import { checkData } from \"../../../../util/chekData\";\n// import axiosJWT from \"../../../../util/axiosJWT\";\n// import { Category } from \"../../../Models/Category\";\n// import { addCouponForGuestAction } from \"../../../../redux/CouponReducer\";\n\n// export function AddCoupon(): JSX.Element {\n//     const navigate = useNavigate();\n//     const companyId = myStore.getState().company.companyDetails.id;\n//     // const [company, setCompany] = useState<Company | null>(null);\n//     const { register, handleSubmit, formState: { errors }, reset } = useForm<Coupon>({\n//         defaultValues: {\n//             categoryId: Category.electricity\n//         }\n//     });\n\n//     const authId = myStore.getState().company.companyDetails.id;\n\n//     useEffect(() => {\n//         checkData();\n//         if (myStore.getState().auth.userType !== \"COMPANY\") {\n//             navigate(\"/Page404\");\n//             notify.error(\"No Access!\");\n\n//         }\n//         if (myStore.getState().auth.token.length < 10) {\n//             navigate(\"/Login\");\n//         }\n//     }, [navigate]);\n\n//     const onSubmit: SubmitHandler<Coupon> = (data) => {\n//         console.log(data);\n//         // data.id = +myStore.getState().coupon.allCoupons+1;\n//         const token = myStore.getState().auth.token;\n//         console.log(\"JWT Token:\", token); // Debugging token in console\n\n//         axiosJWT.post(\"http://localhost:8080/addCoupon\", data, {\n//             headers: {\n//                 'Authorization': `Bearer ${token}`\n//             }\n//         })\n//             .then(res => {\n//                 const newCouponId = +res.data; // Parse the new customer ID\n//                 data.id = newCouponId;\n//                 data.companyId = myStore.getState().company.companyDetails.id;\n//                 console.log(\"Coupon added successfully:\", data);\n//                 myStore.dispatch(addCouponAction(data)); // Dispatch action with added coupon\n//                 myStore.dispatch(addCouponForGuestAction(data));\n//                 notify.success(\"Coupon added successfully!\");\n//                 navigate(\"/allCoupons\")\n\n//             })\n//             .catch(err => {\n//                 console.error(\"Failed to add coupon:\", err.response ? err.response.data : err);\n//                 notify.error(\"Failed to add the coupon. \" + (err.response ? err.response.data.message : \"\"));\n//             });\n//     };\n\n//     return (\n//         <div className=\"AddCoupon\">\n//             <div className=\"Box\" style={{ width: \"70%\", height: \"68vh\", overflowY: \"scroll\" }}>\n//                 <form onSubmit={handleSubmit(onSubmit)}>{/*\n//                     <Typography variant=\"h4\" className=\"HeadLine\">Add Coupon</Typography>\n//                     <hr />\n//                     <TextField\n//                         label=\"Company Id\"\n//                         variant=\"outlined\"\n//                         {...register(\"companyId\", { required: true })}\n//                         fullWidth\n//                     />\n//                     {errors.companyId?.type === \"required\" && (\n//                         <><br /><span style={{ color: \"red\" }}> This field is required!!</span></>\n//                     )}\n//                     <br /><br /> */}\n//                 <InputLabel id=\"category-select-label\">Category Name</InputLabel>\n//                 <Select\n//                     labelId=\"category-select-label\"\n//                     id=\"categoryId\"\n//                     {...register(\"categoryId\", { required: true })}\n//                     label=\"Category Name\"\n//                     defaultValue={Category.electricity} // Ensure default value is set\n//                     fullWidth\n//                 >\n//                     <MenuItem key={Category.electricity} value={Category.electricity}>Electricity</MenuItem>\n//                     <MenuItem key={Category.restaurant} value={Category.restaurant}>Restaurant</MenuItem>\n//                     <MenuItem key={Category.food} value={Category.food}>Food</MenuItem>\n//                     <MenuItem key={Category.vacation} value={Category.vacation}>Vacation</MenuItem>\n//                 </Select>\n//                 {errors.categoryId?.type === \"required\" && (\n//                     <><br /><span style={{ color: \"red\" }}>This field is required!!</span></>\n//                 )}\n//                 <br /><br />\n//                 <TextField\n//                     label=\"Title\"\n//                     variant=\"outlined\"\n//                     {...register(\"title\", { required: true, minLength: 3 })}\n//                     fullWidth\n//                 />\n//                 {errors.title?.type === \"required\" && (\n//                     <><br /><span style={{ color: \"red\" }}>This field is required!!</span></>\n//                 )}\n//                 {errors.title?.type === \"minLength\" && (\n//                     <><br /><span style={{ color: \"red\" }}>Minimum 3 letters</span></>\n//                 )}\n//                 <br /><br />\n//                 <TextField\n//                     label=\"Description\"\n//                     variant=\"outlined\"\n//                     {...register(\"description\")}\n//                     fullWidth\n//                 />\n//                 <br /><br />\n\n//                 <label id=\"startDate\">Start Date</label>\n//                 <input type=\"date\" id=\"startDate\"{...register(\"startDate\")} />\n\n//                 {errors.startDate?.type === \"required\" && (\n//                     <><br /><span style={{ color: \"red\" }}>This field is required!!</span></>\n//                 )}\n//                 <br /><br />\n\n//                 <label id=\"endDate\">End Date</label>\n//                 <input type=\"date\" id=\"endDate\"{...register(\"endDate\")} />\n\n//                 <br /><br />\n//                 <TextField\n//                     label=\"Amount\"\n//                     variant=\"outlined\"\n//                     {...register(\"amount\", { required: true, min: 1 })}\n//                     fullWidth\n//                 />\n//                 {errors.amount?.type === \"min\" && (\n//                     <><br /><span style={{ color: \"red\" }}>Amount must be more than</span></>\n//                 )}\n//                 {errors.amount?.type === \"required\" && (\n//                     <><br /><span style={{ color: \"red\" }}>This field is required!!!</span></>\n//                 )}\n//                 <br /><br />\n//                 <TextField\n//                     label=\"Price\"\n//                     variant=\"outlined\"\n//                     {...register(\"price\", { required: true, min: 1 })}\n//                     fullWidth\n//                 />\n//                 {errors.price?.type === \"min\" && (\n//                     <><br /><span style={{ color: \"red\" }}>Price must be more than</span></>\n//                 )}\n//                 {errors.price?.type === \"required\" && (\n//                     <><br /><span style={{ color: \"red\" }}>This field is required!!!</span></>\n//                 )}\n//                 <br /><br />\n//                 <TextField\n//                     label=\"Image\"\n//                     variant=\"outlined\"\n//                     {...register(\"image\")}\n//                     fullWidth\n//                 />\n//                 <hr />\n//                 <ButtonGroup variant=\"contained\" fullWidth>\n//                     <Button type=\"submit\" color=\"success\">Add Coupon</Button>\n//                     <Button color=\"error\" onClick={() => navigate(\"/allCoupons\")}>Cancel</Button>\n//                 </ButtonGroup>\n//             </form>\n//         </div>\n//         </div >\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/orime/IdeaProjects/Project_Ori_Meir/Frontend/src/Components/Pages/CompanyPages/AddCoupon/AddCoupon.tsx"],"sourcesContent":["// import { Button, ButtonGroup, InputLabel, MenuItem, Select, TextField, Typography } from \"@mui/material\";\n// import { SubmitHandler, useForm } from \"react-hook-form\";\n// import { myStore } from \"../../../../redux/Store\";\n// import notify from \"../../../../util/notify\";\n// import { useNavigate } from \"react-router-dom\";\n// import { addCouponAction } from \"../../../../redux/CompanyReducer\";\n// import { Coupon } from \"../../../Models/Coupon\";\n// import { useEffect, useState } from \"react\";\n// import { checkData } from \"../../../../util/chekData\";\n// import axiosJWT from \"../../../../util/axiosJWT\";\n// import { Category } from \"../../../Models/Category\";\n// import { addCouponForGuestAction } from \"../../../../redux/CouponReducer\";\n\n// export function AddCoupon(): JSX.Element {\n//     const navigate = useNavigate();\n//     const companyId = myStore.getState().company.companyDetails.id;\n//     // const [company, setCompany] = useState<Company | null>(null);\n//     const { register, handleSubmit, formState: { errors }, reset } = useForm<Coupon>({\n//         defaultValues: {\n//             categoryId: Category.electricity\n//         }\n//     });\n\n//     const authId = myStore.getState().company.companyDetails.id;\n\n//     useEffect(() => {\n//         checkData();\n//         if (myStore.getState().auth.userType !== \"COMPANY\") {\n//             navigate(\"/Page404\");\n//             notify.error(\"No Access!\");\n\n//         }\n//         if (myStore.getState().auth.token.length < 10) {\n//             navigate(\"/Login\");\n//         }\n//     }, [navigate]);\n\n//     const onSubmit: SubmitHandler<Coupon> = (data) => {\n//         console.log(data);\n//         // data.id = +myStore.getState().coupon.allCoupons+1;\n//         const token = myStore.getState().auth.token;\n//         console.log(\"JWT Token:\", token); // Debugging token in console\n\n//         axiosJWT.post(\"http://localhost:8080/addCoupon\", data, {\n//             headers: {\n//                 'Authorization': `Bearer ${token}`\n//             }\n//         })\n//             .then(res => {\n//                 const newCouponId = +res.data; // Parse the new customer ID\n//                 data.id = newCouponId;\n//                 data.companyId = myStore.getState().company.companyDetails.id;\n//                 console.log(\"Coupon added successfully:\", data);\n//                 myStore.dispatch(addCouponAction(data)); // Dispatch action with added coupon\n//                 myStore.dispatch(addCouponForGuestAction(data));\n//                 notify.success(\"Coupon added successfully!\");\n//                 navigate(\"/allCoupons\")\n\n//             })\n//             .catch(err => {\n//                 console.error(\"Failed to add coupon:\", err.response ? err.response.data : err);\n//                 notify.error(\"Failed to add the coupon. \" + (err.response ? err.response.data.message : \"\"));\n//             });\n//     };\n\n//     return (\n//         <div className=\"AddCoupon\">\n//             <div className=\"Box\" style={{ width: \"70%\", height: \"68vh\", overflowY: \"scroll\" }}>\n//                 <form onSubmit={handleSubmit(onSubmit)}>{/*\n//                     <Typography variant=\"h4\" className=\"HeadLine\">Add Coupon</Typography>\n//                     <hr />\n//                     <TextField\n//                         label=\"Company Id\"\n//                         variant=\"outlined\"\n//                         {...register(\"companyId\", { required: true })}\n//                         fullWidth\n//                     />\n//                     {errors.companyId?.type === \"required\" && (\n//                         <><br /><span style={{ color: \"red\" }}> This field is required!!</span></>\n//                     )}\n//                     <br /><br /> */}\n//                 <InputLabel id=\"category-select-label\">Category Name</InputLabel>\n//                 <Select\n//                     labelId=\"category-select-label\"\n//                     id=\"categoryId\"\n//                     {...register(\"categoryId\", { required: true })}\n//                     label=\"Category Name\"\n//                     defaultValue={Category.electricity} // Ensure default value is set\n//                     fullWidth\n//                 >\n//                     <MenuItem key={Category.electricity} value={Category.electricity}>Electricity</MenuItem>\n//                     <MenuItem key={Category.restaurant} value={Category.restaurant}>Restaurant</MenuItem>\n//                     <MenuItem key={Category.food} value={Category.food}>Food</MenuItem>\n//                     <MenuItem key={Category.vacation} value={Category.vacation}>Vacation</MenuItem>\n//                 </Select>\n//                 {errors.categoryId?.type === \"required\" && (\n//                     <><br /><span style={{ color: \"red\" }}>This field is required!!</span></>\n//                 )}\n//                 <br /><br />\n//                 <TextField\n//                     label=\"Title\"\n//                     variant=\"outlined\"\n//                     {...register(\"title\", { required: true, minLength: 3 })}\n//                     fullWidth\n//                 />\n//                 {errors.title?.type === \"required\" && (\n//                     <><br /><span style={{ color: \"red\" }}>This field is required!!</span></>\n//                 )}\n//                 {errors.title?.type === \"minLength\" && (\n//                     <><br /><span style={{ color: \"red\" }}>Minimum 3 letters</span></>\n//                 )}\n//                 <br /><br />\n//                 <TextField\n//                     label=\"Description\"\n//                     variant=\"outlined\"\n//                     {...register(\"description\")}\n//                     fullWidth\n//                 />\n//                 <br /><br />\n\n//                 <label id=\"startDate\">Start Date</label>\n//                 <input type=\"date\" id=\"startDate\"{...register(\"startDate\")} />\n\n//                 {errors.startDate?.type === \"required\" && (\n//                     <><br /><span style={{ color: \"red\" }}>This field is required!!</span></>\n//                 )}\n//                 <br /><br />\n\n//                 <label id=\"endDate\">End Date</label>\n//                 <input type=\"date\" id=\"endDate\"{...register(\"endDate\")} />\n\n//                 <br /><br />\n//                 <TextField\n//                     label=\"Amount\"\n//                     variant=\"outlined\"\n//                     {...register(\"amount\", { required: true, min: 1 })}\n//                     fullWidth\n//                 />\n//                 {errors.amount?.type === \"min\" && (\n//                     <><br /><span style={{ color: \"red\" }}>Amount must be more than</span></>\n//                 )}\n//                 {errors.amount?.type === \"required\" && (\n//                     <><br /><span style={{ color: \"red\" }}>This field is required!!!</span></>\n//                 )}\n//                 <br /><br />\n//                 <TextField\n//                     label=\"Price\"\n//                     variant=\"outlined\"\n//                     {...register(\"price\", { required: true, min: 1 })}\n//                     fullWidth\n//                 />\n//                 {errors.price?.type === \"min\" && (\n//                     <><br /><span style={{ color: \"red\" }}>Price must be more than</span></>\n//                 )}\n//                 {errors.price?.type === \"required\" && (\n//                     <><br /><span style={{ color: \"red\" }}>This field is required!!!</span></>\n//                 )}\n//                 <br /><br />\n//                 <TextField\n//                     label=\"Image\"\n//                     variant=\"outlined\"\n//                     {...register(\"image\")}\n//                     fullWidth\n//                 />\n//                 <hr />\n//                 <ButtonGroup variant=\"contained\" fullWidth>\n//                     <Button type=\"submit\" color=\"success\">Add Coupon</Button>\n//                     <Button color=\"error\" onClick={() => navigate(\"/allCoupons\")}>Cancel</Button>\n//                 </ButtonGroup>\n//             </form>\n//         </div>\n//         </div >\n//     );\n// }\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}