{"ast":null,"code":"import axios from \"axios\";\nimport { myStore } from \"../redux/Store\";\nimport { updateTokenAction } from \"../redux/authReducer\";\nconst axiosJWT = axios.create();\naxiosJWT.interceptors.request.use(request => {\n  const token = myStore.getState().auth.token;\n  console.log(\"Request Token:\", token);\n  if (token) {\n    request.headers.Authorization = `${token}`;\n  } else {\n    console.error(\"No token found\");\n  }\n  return request;\n}, error => {\n  console.error(\"Request Error:\", error);\n  return Promise.reject(error);\n});\naxiosJWT.interceptors.response.use(response => {\n  const token = response.headers.authorization;\n  console.log(\"Response Token:\", token);\n  if (token) {\n    myStore.dispatch(updateTokenAction(token));\n    sessionStorage.setItem(\"jwt\", token);\n  } else {\n    console.error(\"No token found in response headers.\");\n  }\n  return response;\n}, error => {\n  console.error(\"Response Error:\", error);\n  return Promise.reject(error);\n});\nexport default axiosJWT;","map":{"version":3,"names":["axios","myStore","updateTokenAction","axiosJWT","create","interceptors","request","use","token","getState","auth","console","log","headers","Authorization","error","Promise","reject","response","authorization","dispatch","sessionStorage","setItem"],"sources":["C:/Users/orime/IdeaProjects/Project_Ori_Meir/Frontend/src/util/axiosJWT.ts"],"sourcesContent":["import axios from \"axios\";\nimport { myStore } from \"../redux/Store\";\nimport { updateTokenAction } from \"../redux/authReducer\";\n\nconst axiosJWT = axios.create();\n\naxiosJWT.interceptors.request.use(\n  (request) => {\n    const token = myStore.getState().auth.token;\n    console.log(\"Request Token:\", token);\n    if (token) {\n      request.headers.Authorization = `${token}`;\n    } else {\n      console.error(\"No token found\");\n    }\n    return request;\n  },\n  (error) => {\n    console.error(\"Request Error:\", error);\n    return Promise.reject(error);\n  }\n);\n\naxiosJWT.interceptors.response.use(\n  (response) => {\n    const token = response.headers.authorization;\n    console.log(\"Response Token:\", token);\n    if (token) {\n      myStore.dispatch(updateTokenAction(token));\n      sessionStorage.setItem(\"jwt\", token);\n    } else {\n      console.error(\"No token found in response headers.\");\n    }\n    return response;\n  },\n  (error) => {\n    console.error(\"Response Error:\", error);\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosJWT;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,iBAAiB,QAAQ,sBAAsB;AAExD,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC,CAAC;AAE/BD,QAAQ,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BD,OAAO,IAAK;EACX,MAAME,KAAK,GAAGP,OAAO,CAACQ,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACF,KAAK;EAC3CG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,KAAK,CAAC;EACpC,IAAIA,KAAK,EAAE;IACTF,OAAO,CAACO,OAAO,CAACC,aAAa,GAAG,GAAGN,KAAK,EAAE;EAC5C,CAAC,MAAM;IACLG,OAAO,CAACI,KAAK,CAAC,gBAAgB,CAAC;EACjC;EACA,OAAOT,OAAO;AAChB,CAAC,EACAS,KAAK,IAAK;EACTJ,OAAO,CAACI,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDZ,QAAQ,CAACE,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC/BW,QAAQ,IAAK;EACZ,MAAMV,KAAK,GAAGU,QAAQ,CAACL,OAAO,CAACM,aAAa;EAC5CR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,KAAK,CAAC;EACrC,IAAIA,KAAK,EAAE;IACTP,OAAO,CAACmB,QAAQ,CAAClB,iBAAiB,CAACM,KAAK,CAAC,CAAC;IAC1Ca,cAAc,CAACC,OAAO,CAAC,KAAK,EAAEd,KAAK,CAAC;EACtC,CAAC,MAAM;IACLG,OAAO,CAACI,KAAK,CAAC,qCAAqC,CAAC;EACtD;EACA,OAAOG,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACTJ,OAAO,CAACI,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EACvC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}